# This is a Mockintosh configuration file.
# Mockintosh provides a microservices friendly, small footprint HTTP mock service.
# A standard laptop can run dozens of Mockintosh instances, or you can run all instances in a single Docker container.
#
# Install Mockintosh:                 pip3 install mockintosh
# Run locally:                        mockintosh <this-file>
# Run with Docker:                    docker run -it -p 8000-8005:8000-8005 -v `pwd`:/tmp testrio/mockintosh /tmp/<this-file>
# More information can be found here: https://github.com/up9inc/mockintosh

---
management:
  port: 8000
services:
- name: http://adservice.default
  port: 8001
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___adservice.default-spec.json'
  endpoints: []
- name: http://cartservice.default
  port: 8002
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___cartservice.default-spec.json'
  endpoints: []
- name: http://checkoutservice.default
  port: 8003
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___checkoutservice.default-spec.json'
  endpoints: []
- name: http://currencyservice.default
  port: 8004
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___currencyservice.default-spec.json'
  endpoints: []
- name: http://emailservice.default
  port: 8005
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___emailservice.default-spec.json'
  endpoints: []
- name: http://frontend-external.default
  port: 8006
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___frontend-external.default-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_23.html'
      useTemplating: false
  - path: /cart
    response:
      status: 302
    method: post
  - path: /cart
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_25.html'
      useTemplating: false
  - path: /cart/checkout
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_26.html'
      useTemplating: false
    method: post
  - path: /product/{{href}}
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_27.html'
      useTemplating: false
  - path: /setCurrency
    response:
      status: 302
    method: post
  - path: /_healthz
    response:
      headers:
        Content-Type: text/plain
      body: ok
      useTemplating: false
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_39.html'
      useTemplating: false
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_56.html'
      useTemplating: false
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_64.html'
      useTemplating: false
  - path: /
    response:
      headers:
        Content-Type: text/html
    method: head
- name: 'http://frontend-external.defaulthttp:'
  port: 8007
  ssl: false
  managementRoot: __admin
  endpoints: []
- name: http://frontend.default
  port: 8008
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___frontend.default-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_16.html'
      useTemplating: false
  - path: /cart
    response:
      status: 302
    method: post
  - path: /cart
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_18.html'
      useTemplating: false
  - path: /cart/checkout
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_19.html'
      useTemplating: false
    method: post
  - path: /product/{{href}}
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_20.html'
      useTemplating: false
  - path: /setCurrency
    response:
      status: 302
    method: post
  - path: /_healthz
    response:
      headers:
        Content-Type: text/plain
      body: ok
      useTemplating: false
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_48.html'
      useTemplating: false
- name: 'http://frontend.defaulthttp:'
  port: 8009
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___frontend.defaulthttp_-spec.json'
  endpoints:
  - path: /{{param}}/
    response:
      headers:
        Content-Type: text/html
    method: head
  - path: /www.soso.com/
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_31.html'
      useTemplating: false
- name: http://paymentservice.default
  port: 8010
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___paymentservice.default-spec.json'
  endpoints: []
- name: http://productcatalogservice.default
  port: 8011
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___productcatalogservice.default-spec.json'
  endpoints: []
- name: http://recommendationservice.default
  port: 8012
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___recommendationservice.default-spec.json'
  endpoints: []
- name: http://shippingservice.default
  port: 8013
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___shippingservice.default-spec.json'
  endpoints: []
