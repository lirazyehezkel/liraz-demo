{
 "16": "    @json_dataset('data/dataset_16.json')\n    @clear_session({'spanId': 16})\n    def test_16_get_(self, data_row):\n        s, vars_0_ = data_row\n\n        # GET http://frontend.default/ (endp 16)\n        frontend_default = get_http_target('TARGET_FRONTEND_DEFAULT', authenticate)\n        qstr = '?' + urlencode([('XDEBUG_SESSION_START', 'phpstorm'), ('function', 'call_user_func_array'), ('s', s), ('vars[0]', vars_0_)])\n        resp = frontend_default.get('/' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('header div.navbar div.container.d-flex.justify-content-between div.h-free-shipping', expected_value='Free shipping with $75 purchase! \\xa0\\xa0')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "23": "    @json_dataset('data/dataset_23.json')\n    @clear_session({'spanId': 23})\n    def test_23_get_(self, data_row):\n        content, s, vars_0_ = data_row\n\n        # GET http://frontend-external.default/ (endp 23)\n        frontend_external_default = get_http_target('TARGET_FRONTEND_EXTERNAL_DEFAULT', authenticate)\n        qstr = '?' + urlencode([('XDEBUG_SESSION_START', 'phpstorm'), ('a', 'fetch'), ('content', content), ('function', 'call_user_func_array'), ('s', s), ('vars[0]', vars_0_)])\n        resp = frontend_external_default.get('/' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('header div.navbar div.container.d-flex.justify-content-between div.h-free-shipping', expected_value='Free shipping with $75 purchase! \\xa0\\xa0')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "39": "    @json_dataset('data/dataset_39.json')\n    @clear_session({'spanId': 39})\n    def test_39_get_(self, data_row):\n        content, = data_row\n\n        # GET http://frontend-external.default/ (endp 39)\n        frontend_external_default = get_http_target('TARGET_FRONTEND_EXTERNAL_DEFAULT', authenticate)\n        qstr = '?' + urlencode([('a', 'fetch'), ('content', content)])\n        resp = frontend_external_default.get('/' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('header div.navbar div.container.d-flex.justify-content-between div.h-free-shipping', expected_value='Free shipping with $75 purchase! \\xa0\\xa0')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "48": "    @json_dataset('data/dataset_48.json')\n    @clear_session({'spanId': 48})\n    def test_48_get_(self, data_row):\n        content, = data_row\n\n        # GET http://frontend.default/ (endp 48)\n        frontend_default = get_http_target('TARGET_FRONTEND_DEFAULT', authenticate)\n        qstr = '?' + urlencode([('a', 'fetch'), ('content', content)])\n        resp = frontend_default.get('/' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('header div.navbar div.container.d-flex.justify-content-between div.h-free-shipping', expected_value='Free shipping with $75 purchase! \\xa0\\xa0')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "56": "    @clear_session({'spanId': 56})\n    def test_56_get_(self):\n        # GET http://frontend-external.default/ (endp 56)\n        frontend_external_default = get_http_target('TARGET_FRONTEND_EXTERNAL_DEFAULT', authenticate)\n        resp = frontend_external_default.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('header div.navbar div.container.d-flex.justify-content-between div.h-free-shipping', expected_value='Free shipping with $75 purchase! \\xa0\\xa0')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "64": "    @clear_session({'spanId': 64})\n    def test_64_get_(self):\n        # GET http://frontend-external.default/ (endp 64)\n        frontend_external_default = get_http_target('TARGET_FRONTEND_EXTERNAL_DEFAULT', authenticate)\n        resp = frontend_external_default.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('header div.navbar div.container.d-flex.justify-content-between div.h-free-shipping', expected_value='Free shipping with $75 purchase! \\xa0\\xa0')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "72": "    @clear_session({'spanId': 72})\n    def test_72_head_(self):\n        # HEAD http://frontend-external.default/ (endp 72)\n        frontend_external_default = get_http_target('TARGET_FRONTEND_EXTERNAL_DEFAULT', authenticate)\n        resp = frontend_external_default.head('/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "30": "    @json_dataset('data/dataset_30.json')\n    @clear_session({'spanId': 30})\n    def test_30_head_param_(self, data_row):\n        param, = data_row\n\n        # HEAD http://frontend.defaulthttp:/{param}/ (endp 30)\n        frontend_defaulthttp_ = get_http_target('TARGET_FRONTEND_DEFAULTHTTP_', authenticate)\n        resp = frontend_defaulthttp_.head(f'/{param}/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "22": "    @clear_session({'spanId': 22})\n    def test_22_get__healthz(self):\n        # GET http://frontend.default/_healthz (endp 22)\n        frontend_default = get_http_target('TARGET_FRONTEND_DEFAULT', authenticate)\n        resp = frontend_default.get('/_healthz')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "29": "    @clear_session({'spanId': 29})\n    def test_29_get__healthz(self):\n        # GET http://frontend-external.default/_healthz (endp 29)\n        frontend_external_default = get_http_target('TARGET_FRONTEND_EXTERNAL_DEFAULT', authenticate)\n        resp = frontend_external_default.get('/_healthz')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "17": "    @json_dataset('data/dataset_17.json')\n    @clear_session({'spanId': 17})\n    def test_17_post_cart(self, data_row):\n        product_id, = data_row\n\n        # POST http://frontend.default/cart (endp 17)\n        frontend_default = get_http_target('TARGET_FRONTEND_DEFAULT', authenticate)\n        resp = frontend_default.post('/cart', data=[('product_id', product_id), ('quantity', str(random.randint(1, 10)))])\n        resp.assert_ok()\n        # resp.assert_status_code(302)\n\n",
 "18": "    @clear_session({'spanId': 18})\n    def test_18_get_cart(self):\n        # GET http://frontend.default/cart (endp 18)\n        frontend_default = get_http_target('TARGET_FRONTEND_DEFAULT', authenticate)\n        resp = frontend_default.get('/cart')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('main.cart div.cart-bg div.container div.row.checkout div h3.text-center', expected_value='Checkout')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "24": "    @json_dataset('data/dataset_24.json')\n    @clear_session({'spanId': 24})\n    def test_24_post_cart(self, data_row):\n        product_id, = data_row\n\n        # POST http://frontend-external.default/cart (endp 24)\n        frontend_external_default = get_http_target('TARGET_FRONTEND_EXTERNAL_DEFAULT', authenticate)\n        resp = frontend_external_default.post('/cart', data=[('product_id', product_id), ('quantity', str(random.randint(1, 10)))])\n        resp.assert_ok()\n        # resp.assert_status_code(302)\n\n",
 "25": "    @clear_session({'spanId': 25})\n    def test_25_get_cart(self):\n        # GET http://frontend-external.default/cart (endp 25)\n        frontend_external_default = get_http_target('TARGET_FRONTEND_EXTERNAL_DEFAULT', authenticate)\n        resp = frontend_external_default.get('/cart')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('main.cart div.cart-bg div.container h3', expected_value='Your shopping cart is empty!')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "19": "    @json_dataset('data/dataset_19.json')\n    @clear_session({'spanId': 19})\n    def test_19_post_cart_checkout(self, data_row):\n        city, country, credit_card_cvv, credit_card_expiration_year, credit_card_number, email_, street_address, zip_code = data_row\n\n        # POST http://frontend.default/cart/checkout (endp 19)\n        frontend_default = get_http_target('TARGET_FRONTEND_DEFAULT', authenticate)\n        resp = frontend_default.post('/cart/checkout', data=[('city', city), ('country', country), ('credit_card_cvv', credit_card_cvv), ('credit_card_expiration_month', '1'), ('credit_card_expiration_year', credit_card_expiration_year), ('credit_card_number', credit_card_number), ('email', email_), ('state', 'CA'), ('street_address', street_address), ('zip_code', zip_code)])\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('main.order div div.container div.row.text-center a.btn.btn-info', expected_value='Keep Browsing')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "26": "    @json_dataset('data/dataset_26.json')\n    @clear_session({'spanId': 26})\n    def test_26_post_cart_checkout(self, data_row):\n        city, country, credit_card_cvv, credit_card_expiration_year, credit_card_number, email_, street_address, zip_code = data_row\n\n        # POST http://frontend-external.default/cart/checkout (endp 26)\n        frontend_external_default = get_http_target('TARGET_FRONTEND_EXTERNAL_DEFAULT', authenticate)\n        resp = frontend_external_default.post('/cart/checkout', data=[('city', city), ('country', country), ('credit_card_cvv', credit_card_cvv), ('credit_card_expiration_month', '1'), ('credit_card_expiration_year', credit_card_expiration_year), ('credit_card_number', credit_card_number), ('email', email_), ('state', 'CA'), ('street_address', street_address), ('zip_code', zip_code)])\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('main.order div div.container div.row.text-center a.btn.btn-info', expected_value='Keep Browsing')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "8": "    @json_dataset('data/dataset_8.json')\n    @clear_session({'spanId': 8})\n    def test_08_post_hipstershop_AdService_GetAds(self, data_row):\n        field_1, = data_row\n\n        # POST http://adservice.default/hipstershop.AdService/GetAds (endp 8)\n        adservice_default = get_http_target('TARGET_ADSERVICE_DEFAULT', authenticate)\n        adservice_default.set_grpc(hipstershop_pb2_grpc.AdServiceStub)\n        msg = hipstershop_pb2.GetAdsReq()\n        apply_into_protobuf(msg, '1', field_1)\n        resp = adservice_default.grpc_stub.GetAds(msg)\n        resp = wrap_grpc_for_tracing(resp)\n\n",
 "3": "    @json_dataset('data/dataset_3.json')\n    @clear_session({'spanId': 3})\n    def test_03_post_hipstershop_CartService_AddItem(self, data_row):\n        field_2_1, field_2_2 = data_row\n\n        # POST http://cartservice.default/hipstershop.CartService/AddItem (endp 3)\n        cartservice_default = get_http_target('TARGET_CARTSERVICE_DEFAULT', authenticate)\n        cartservice_default.set_grpc(hipstershop_pb2_grpc.CartServiceStub)\n        msg = hipstershop_pb2.AddItemReq()\n        apply_into_protobuf(msg, '1', str(uuid.uuid4()))\n        apply_into_protobuf(msg, '2.1', field_2_1)\n        apply_into_protobuf(msg, '2.2', field_2_2)\n        resp = cartservice_default.grpc_stub.AddItem(msg)\n        resp = wrap_grpc_for_tracing(resp)\n\n",
 "11": "    @clear_session({'spanId': 11})\n    def test_11_post_hipstershop_CartService_EmptyCart(self):\n        # POST http://cartservice.default/hipstershop.CartService/EmptyCart (endp 11)\n        cartservice_default = get_http_target('TARGET_CARTSERVICE_DEFAULT', authenticate)\n        cartservice_default.set_grpc(hipstershop_pb2_grpc.CartServiceStub)\n        msg = hipstershop_pb2.EmptyCartReq()\n        apply_into_protobuf(msg, '1', str(uuid.uuid4()))\n        resp = cartservice_default.grpc_stub.EmptyCart(msg)\n        resp = wrap_grpc_for_tracing(resp)\n\n",
 "4": "    @clear_session({'spanId': 4})\n    def test_04_post_hipstershop_CartService_GetCart(self):\n        # POST http://cartservice.default/hipstershop.CartService/GetCart (endp 4)\n        cartservice_default = get_http_target('TARGET_CARTSERVICE_DEFAULT', authenticate)\n        cartservice_default.set_grpc(hipstershop_pb2_grpc.CartServiceStub)\n        msg = hipstershop_pb2.GetCartReq()\n        apply_into_protobuf(msg, '1', str(uuid.uuid4()))\n        resp = cartservice_default.grpc_stub.GetCart(msg)\n        resp = wrap_grpc_for_tracing(resp)\n\n",
 "10": "    @json_dataset('data/dataset_10.json')\n    @clear_session({'spanId': 10})\n    def test_10_post_hipstershop_CheckoutService_PlaceOrder(self, data_row):\n        field_1, field_2, field_3_1, field_3_2, field_3_4, field_3_5, field_5, field_6_1, field_6_2, field_6_3 = data_row\n\n        # POST http://checkoutservice.default/hipstershop.CheckoutService/PlaceOrder (endp 10)\n        checkoutservice_default = get_http_target('TARGET_CHECKOUTSERVICE_DEFAULT', authenticate)\n        checkoutservice_default.set_grpc(hipstershop_pb2_grpc.CheckoutServiceStub)\n        msg = hipstershop_pb2.PlaceOrderReq()\n        apply_into_protobuf(msg, '1', field_1)\n        apply_into_protobuf(msg, '2', field_2)\n        apply_into_protobuf(msg, '3.1', field_3_1)\n        apply_into_protobuf(msg, '3.2', field_3_2)\n        apply_into_protobuf(msg, '3.3', 'CA')\n        apply_into_protobuf(msg, '3.4', field_3_4)\n        apply_into_protobuf(msg, '3.5', field_3_5)\n        apply_into_protobuf(msg, '5', field_5)\n        apply_into_protobuf(msg, '6.1', field_6_1)\n        apply_into_protobuf(msg, '6.2', field_6_2)\n        apply_into_protobuf(msg, '6.3', field_6_3)\n        apply_into_protobuf(msg, '6.4', 1)\n        resp = checkoutservice_default.grpc_stub.PlaceOrder(msg)\n        resp = wrap_grpc_for_tracing(resp)\n        # assert_grpc(resp, '1.4.1', expected_value='1600 Amphitheatre Parkway')\n\n",
 "1": "    @json_dataset('data/dataset_1.json')\n    @clear_session({'spanId': 1})\n    def test_01_post_hipstershop_CurrencyService_Convert(self, data_row):\n        field_2, = data_row\n\n        # POST http://currencyservice.default/hipstershop.CurrencyService/Convert (endp 1)\n        currencyservice_default = get_http_target('TARGET_CURRENCYSERVICE_DEFAULT', authenticate)\n        currencyservice_default.set_grpc(hipstershop_pb2_grpc.CurrencyServiceStub)\n        msg = hipstershop_pb2.ConvertReq()\n        apply_into_protobuf(msg, '1.1', 'USD')\n        apply_into_protobuf(msg, '1.2', int(random.randint(4, 2245)))\n        apply_into_protobuf(msg, '1.3', int(random.randint(220000000, 990000000)))\n        apply_into_protobuf(msg, '2', field_2)\n        resp = currencyservice_default.grpc_stub.Convert(msg)\n        resp = wrap_grpc_for_tracing(resp)\n\n",
 "2": "    @clear_session({'spanId': 2})\n    def test_02_post_hipstershop_CurrencyService_GetSupportedCurrencies(self):\n        # POST http://currencyservice.default/hipstershop.CurrencyService/GetSupportedCurrencies (endp 2)\n        currencyservice_default = get_http_target('TARGET_CURRENCYSERVICE_DEFAULT', authenticate)\n        currencyservice_default.set_grpc(hipstershop_pb2_grpc.CurrencyServiceStub)\n        msg = hipstershop_pb2.GetSupportedCurrenciesReq()\n        resp = currencyservice_default.grpc_stub.GetSupportedCurrencies(msg)\n        resp = wrap_grpc_for_tracing(resp)\n\n",
 "15": "    @json_dataset('data/dataset_15.json')\n    @clear_session({'spanId': 15})\n    def test_15_post_hipstershop_EmailService_SendOrderConfirmation(self, data_row):\n        field_1, field_2_2, field_2_3_1, field_2_4_1, field_2_4_2, field_2_4_4, field_2_4_5, field_2_5_1_1, field_2_5_2_1 = data_row\n\n        # POST http://emailservice.default/hipstershop.EmailService/SendOrderConfirmation (endp 15)\n        emailservice_default = get_http_target('TARGET_EMAILSERVICE_DEFAULT', authenticate)\n        emailservice_default.set_grpc(hipstershop_pb2_grpc.EmailServiceStub)\n        msg = hipstershop_pb2.SendOrderConfirmationReq()\n        apply_into_protobuf(msg, '1', field_1)\n        apply_into_protobuf(msg, '2.1', str(uuid.uuid4()))\n        apply_into_protobuf(msg, '2.2', field_2_2)\n        apply_into_protobuf(msg, '2.3.1', field_2_3_1)\n        apply_into_protobuf(msg, '2.3.2', int(random.randint(4, 116)))\n        apply_into_protobuf(msg, '2.3.3', int(random.randint(20000000, 999999999)))\n        apply_into_protobuf(msg, '2.4.1', field_2_4_1)\n        apply_into_protobuf(msg, '2.4.2', field_2_4_2)\n        apply_into_protobuf(msg, '2.4.3', 'CA')\n        apply_into_protobuf(msg, '2.4.4', field_2_4_4)\n        apply_into_protobuf(msg, '2.4.5', field_2_4_5)\n        apply_into_protobuf(msg, '2.5.1.1', field_2_5_1_1)\n        apply_into_protobuf(msg, '2.5.1.2', int(random.randint(1, 15)))\n        apply_into_protobuf(msg, '2.5.2.1', field_2_5_2_1)\n        apply_into_protobuf(msg, '2.5.2.2', int(random.randint(12, 2244)))\n        apply_into_protobuf(msg, '2.5.2.3', int(random.randint(299999999, 999999999)))\n        resp = emailservice_default.grpc_stub.SendOrderConfirmation(msg)\n        resp = wrap_grpc_for_tracing(resp)\n\n",
 "14": "    @json_dataset('data/dataset_14.json')\n    @clear_session({'spanId': 14})\n    def test_14_post_hipstershop_PaymentService_Charge(self, data_row):\n        field_1_1, field_2_1, field_2_2, field_2_3 = data_row\n\n        # POST http://paymentservice.default/hipstershop.PaymentService/Charge (endp 14)\n        paymentservice_default = get_http_target('TARGET_PAYMENTSERVICE_DEFAULT', authenticate)\n        paymentservice_default.set_grpc(hipstershop_pb2_grpc.PaymentServiceStub)\n        msg = hipstershop_pb2.ChargeReq()\n        apply_into_protobuf(msg, '1.1', field_1_1)\n        apply_into_protobuf(msg, '1.2', int(random.randint(17, 15229)))\n        apply_into_protobuf(msg, '1.3', int(random.randint(14124723, 999999999)))\n        apply_into_protobuf(msg, '2.1', field_2_1)\n        apply_into_protobuf(msg, '2.2', field_2_2)\n        apply_into_protobuf(msg, '2.3', field_2_3)\n        apply_into_protobuf(msg, '2.4', 1)\n        resp = paymentservice_default.grpc_stub.Charge(msg)\n        resp = wrap_grpc_for_tracing(resp)\n\n",
 "5": "    @json_dataset('data/dataset_5.json')\n    @clear_session({'spanId': 5})\n    def test_05_post_hipstershop_ProductCatalogService_GetProduct(self, data_row):\n        field_1, = data_row\n\n        # POST http://productcatalogservice.default/hipstershop.ProductCatalogService/GetProduct (endp 5)\n        productcatalogservice_default = get_http_target('TARGET_PRODUCTCATALOGSERVICE_DEFAULT', authenticate)\n        productcatalogservice_default.set_grpc(hipstershop_pb2_grpc.ProductCatalogServiceStub)\n        msg = hipstershop_pb2.GetProductReq()\n        apply_into_protobuf(msg, '1', field_1)\n        resp = productcatalogservice_default.grpc_stub.GetProduct(msg)\n        resp = wrap_grpc_for_tracing(resp)\n        # assert_grpc(resp, '5.1', expected_value='USD')\n\n",
 "6": "    @clear_session({'spanId': 6})\n    def test_06_post_hipstershop_ProductCatalogService_ListProducts(self):\n        # POST http://productcatalogservice.default/hipstershop.ProductCatalogService/ListProducts (endp 6)\n        productcatalogservice_default = get_http_target('TARGET_PRODUCTCATALOGSERVICE_DEFAULT', authenticate)\n        productcatalogservice_default.set_grpc(hipstershop_pb2_grpc.ProductCatalogServiceStub)\n        msg = hipstershop_pb2.ListProductsReq()\n        resp = productcatalogservice_default.grpc_stub.ListProducts(msg)\n        resp = wrap_grpc_for_tracing(resp)\n        # assert_grpc(resp, '1.5.1', expected_value='USD')\n\n",
 "7": "    @json_dataset('data/dataset_7.json')\n    @clear_session({'spanId': 7})\n    def test_07_post_hipstershop_RecommendationService_ListRecommendations(self, data_row):\n        field_2, = data_row\n\n        # POST http://recommendationservice.default/hipstershop.RecommendationService/ListRecommendations (endp 7)\n        recommendationservice_default = get_http_target('TARGET_RECOMMENDATIONSERVICE_DEFAULT', authenticate)\n        recommendationservice_default.set_grpc(hipstershop_pb2_grpc.RecommendationServiceStub)\n        msg = hipstershop_pb2.ListRecommendationsReq()\n        apply_into_protobuf(msg, '1', str(uuid.uuid4()))\n        apply_into_protobuf(msg, '2', field_2)\n        resp = recommendationservice_default.grpc_stub.ListRecommendations(msg)\n        resp = wrap_grpc_for_tracing(resp)\n\n",
 "9": "    @json_dataset('data/dataset_9.json')\n    @clear_session({'spanId': 9})\n    def test_09_post_hipstershop_ShippingService_GetQuote(self, data_row):\n        field_1_1, field_1_2, field_1_4, field_1_5, field_2_1, field_2_2 = data_row\n\n        # POST http://shippingservice.default/hipstershop.ShippingService/GetQuote (endp 9)\n        shippingservice_default = get_http_target('TARGET_SHIPPINGSERVICE_DEFAULT', authenticate)\n        shippingservice_default.set_grpc(hipstershop_pb2_grpc.ShippingServiceStub)\n        msg = hipstershop_pb2.GetQuoteReq()\n        apply_into_protobuf(msg, '1.1', field_1_1)\n        apply_into_protobuf(msg, '1.2', field_1_2)\n        apply_into_protobuf(msg, '1.3', 'CA')\n        apply_into_protobuf(msg, '1.4', field_1_4)\n        apply_into_protobuf(msg, '1.5', field_1_5)\n        apply_into_protobuf(msg, '2.1', field_2_1)\n        apply_into_protobuf(msg, '2.2', field_2_2)\n        resp = shippingservice_default.grpc_stub.GetQuote(msg)\n        resp = wrap_grpc_for_tracing(resp)\n        # assert_grpc(resp, '1.1', expected_value='USD')\n\n",
 "13": "    @json_dataset('data/dataset_13.json')\n    @clear_session({'spanId': 13})\n    def test_13_post_hipstershop_ShippingService_ShipOrder(self, data_row):\n        field_1_1, field_1_2, field_1_4, field_1_5, field_2_1 = data_row\n\n        # POST http://shippingservice.default/hipstershop.ShippingService/ShipOrder (endp 13)\n        shippingservice_default = get_http_target('TARGET_SHIPPINGSERVICE_DEFAULT', authenticate)\n        shippingservice_default.set_grpc(hipstershop_pb2_grpc.ShippingServiceStub)\n        msg = hipstershop_pb2.ShipOrderReq()\n        apply_into_protobuf(msg, '1.1', field_1_1)\n        apply_into_protobuf(msg, '1.2', field_1_2)\n        apply_into_protobuf(msg, '1.3', 'CA')\n        apply_into_protobuf(msg, '1.4', field_1_4)\n        apply_into_protobuf(msg, '1.5', field_1_5)\n        apply_into_protobuf(msg, '2.1', field_2_1)\n        apply_into_protobuf(msg, '2.2', int(random.randint(1, 15)))\n        resp = shippingservice_default.grpc_stub.ShipOrder(msg)\n        resp = wrap_grpc_for_tracing(resp)\n\n",
 "20": "    @json_dataset('data/dataset_20.json')\n    @clear_session({'spanId': 20})\n    def test_20_get_product_href(self, data_row):\n        href, = data_row\n\n        # GET http://frontend.default/product/{href} (endp 20)\n        frontend_default = get_http_target('TARGET_FRONTEND_DEFAULT', authenticate)\n        resp = frontend_default.get(f'/product/{href}')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('main div.h-product div.row div.product-info.col div.product-wrapper div h6', expected_value='Product Description:')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "27": "    @json_dataset('data/dataset_27.json')\n    @clear_session({'spanId': 27})\n    def test_27_get_product_href(self, data_row):\n        href, = data_row\n\n        # GET http://frontend-external.default/product/{href} (endp 27)\n        frontend_external_default = get_http_target('TARGET_FRONTEND_EXTERNAL_DEFAULT', authenticate)\n        resp = frontend_external_default.get(f'/product/{href}')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('main div.container div.container div.alert.alert-dark strong', expected_value='Advertisement:')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n",
 "21": "    @json_dataset('data/dataset_21.json')\n    @clear_session({'spanId': 21})\n    def test_21_post_setCurrency(self, data_row):\n        currency_code, = data_row\n\n        # POST http://frontend.default/setCurrency (endp 21)\n        frontend_default = get_http_target('TARGET_FRONTEND_DEFAULT', authenticate)\n        resp = frontend_default.post('/setCurrency', data=[('currency_code', currency_code)])\n        resp.assert_ok()\n        # resp.assert_status_code(302)\n\n",
 "28": "    @json_dataset('data/dataset_28.json')\n    @clear_session({'spanId': 28})\n    def test_28_post_setCurrency(self, data_row):\n        currency_code, = data_row\n\n        # POST http://frontend-external.default/setCurrency (endp 28)\n        frontend_external_default = get_http_target('TARGET_FRONTEND_EXTERNAL_DEFAULT', authenticate)\n        resp = frontend_external_default.post('/setCurrency', data=[('currency_code', currency_code)])\n        resp.assert_ok()\n        # resp.assert_status_code(302)\n\n",
 "31": "    @clear_session({'spanId': 31})\n    def test_31_get_www_soso_com_(self):\n        # GET http://frontend.defaulthttp:/www.soso.com/ (endp 31)\n        frontend_defaulthttp_ = get_http_target('TARGET_FRONTEND_DEFAULTHTTP_', authenticate)\n        resp = frontend_defaulthttp_.get('/www.soso.com/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('header div.navbar div.container.d-flex.justify-content-between div.h-free-shipping', expected_value='Free shipping with $75 purchase! \\xa0\\xa0')\n        # resp.assert_cssselect('html head title', expected_value='Online Boutique')\n\n"
}